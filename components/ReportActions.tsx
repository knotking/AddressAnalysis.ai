import React, { useState } from 'react';
import { ReportData } from '../types';
import { DownloadIcon, ClipboardIcon, SmsIcon, WhatsAppIcon } from './icons';

interface ReportActionsProps {
  address: string;
  report: ReportData;
}

const formatReportForDownload = (address: string, reportData: ReportData): string => {
    let content = `# Neighborhood Report for ${address}\n\n`;
    (Object.keys(reportData) as Array<keyof ReportData>).forEach(key => {
        const section = reportData[key];
        const title = key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());
        content += `## ${title}\n\n`;
        content += `**Summary:** ${section.summary}\n\n`;
        if (section.items && section.items.length > 0) {
            content += "### Details:\n";
            section.items.forEach(item => {
                content += `- **${item.name}:** ${item.details}\n`;
            });
        }
        content += '\n---\n\n';
    });
    return content;
};

const formatReportForShare = (address: string, reportData: ReportData): string => {
    const summaryPoints = [];
    if (reportData.schools?.summary) summaryPoints.push(`üè´ Schools: ${reportData.schools.summary}`);
    if (reportData.restaurants?.summary) summaryPoints.push(`üçΩÔ∏è Restaurants: ${reportData.restaurants.summary}`);
    if (reportData.crime?.summary) summaryPoints.push(`üëÆ Crime: ${reportData.crime.summary}`);

    return `Check out this neighborhood analysis for ${address} generated by AI:\n\n${summaryPoints.join('\n')}\n\nGet your own report!`;
};

export const ReportActions: React.FC<ReportActionsProps> = ({ address, report }) => {
    const [copyButtonText, setCopyButtonText] = useState('Copy Summary');

    const handleDownload = () => {
        const reportText = formatReportForDownload(address, report);
        const blob = new Blob([reportText], { type: 'text/markdown;charset=utf-8' });
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = `Neighborhood Report - ${address}.md`;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        URL.revokeObjectURL(url);
    };

    const handleCopy = () => {
        const summaryText = formatReportForShare(address, report);
        navigator.clipboard.writeText(summaryText).then(() => {
            setCopyButtonText('Copied!');
            setTimeout(() => setCopyButtonText('Copy Summary'), 2000);
        }).catch(err => {
            console.error('Failed to copy text: ', err);
            setCopyButtonText('Failed to copy');
             setTimeout(() => setCopyButtonText('Copy Summary'), 2000);
        });
    };
    
    const handleShare = (platform: 'sms' | 'whatsapp') => {
        const summaryText = formatReportForShare(address, report);
        const encodedText = encodeURIComponent(summaryText);
        let url = '';

        if (platform === 'sms') {
            url = `sms:?&body=${encodedText}`;
        } else if (platform === 'whatsapp') {
            url = `https://wa.me/?text=${encodedText}`;
        }

        if (url) {
            window.open(url, '_blank');
        }
    };

    return (
        <div className="flex items-center gap-2 flex-wrap justify-end">
            <button
                onClick={handleDownload}
                className="flex items-center gap-2 px-3 py-1.5 text-xs bg-gray-700 hover:bg-gray-600 text-gray-200 rounded-full transition-colors"
                aria-label="Download full report"
            >
                <DownloadIcon />
                <span>Download</span>
            </button>
            <button
                onClick={handleCopy}
                className="flex items-center gap-2 px-3 py-1.5 text-xs bg-gray-700 hover:bg-gray-600 text-gray-200 rounded-full transition-colors"
                aria-label="Copy report summary to clipboard"
            >
                <ClipboardIcon />
                <span>{copyButtonText}</span>
            </button>
             <button
                onClick={() => handleShare('sms')}
                className="flex items-center gap-2 px-3 py-1.5 text-xs bg-gray-700 hover:bg-gray-600 text-gray-200 rounded-full transition-colors"
                aria-label="Share report summary via SMS"
            >
                <SmsIcon />
                <span>SMS</span>
            </button>
            <button
                onClick={() => handleShare('whatsapp')}
                className="flex items-center gap-2 px-3 py-1.5 text-xs bg-gray-700 hover:bg-gray-600 text-gray-200 rounded-full transition-colors"
                aria-label="Share report summary on WhatsApp"
            >
                <WhatsAppIcon />
                <span>WhatsApp</span>
            </button>
        </div>
    );
};